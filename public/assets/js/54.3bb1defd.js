(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{5465:function(s,t,a){s.exports=a.p+"assets/img/1718058438327.fca57568.png"},5466:function(s,t,a){s.exports=a.p+"assets/img/1718058747335.7f69c790.png"},5467:function(s,t,a){s.exports=a.p+"assets/img/1718058918398.7dffeb71.png"},5468:function(s,t,a){s.exports=a.p+"assets/img/1718059255297.cf27f0c7.png"},5469:function(s,t,a){s.exports=a.p+"assets/img/1718059108160.dcaf8dce.png"},5470:function(s,t,a){s.exports=a.p+"assets/img/1718059392985.bb91eb91.png"},5471:function(s,t,a){s.exports=a.p+"assets/img/1718059491071.aa355ec8.png"},5472:function(s,t,a){s.exports=a.p+"assets/img/1718059634139.f36cdfeb.png"},5473:function(s,t,a){s.exports=a.p+"assets/img/1718059694547.86a6c664.png"},5474:function(s,t,a){s.exports=a.p+"assets/img/1718071539779.567fe0bc.png"},5475:function(s,t,a){s.exports=a.p+"assets/img/1718071603745.8a415471.png"},5476:function(s,t,a){s.exports=a.p+"assets/img/1718072443525.834118e2.png"},5477:function(s,t,a){s.exports=a.p+"assets/img/1718072709733.bbf2b1ab.png"},5478:function(s,t,a){s.exports=a.p+"assets/img/1718072758617.6422d00e.png"},5479:function(s,t,a){s.exports=a.p+"assets/img/1718072849548.ddd8728f.png"},5480:function(s,t,a){s.exports=a.p+"assets/img/1718072948173.0e0d230d.png"},5481:function(s,t,a){s.exports=a.p+"assets/img/1718060762837.c64e7c17.png"},5482:function(s,t,a){s.exports=a.p+"assets/img/1718074022419.4669833e.png"},5483:function(s,t,a){s.exports=a.p+"assets/img/1718074050707.6b4d0a33.png"},5484:function(s,t,a){s.exports=a.p+"assets/img/1718061428571.e7630806.png"},5485:function(s,t,a){s.exports=a.p+"assets/img/1718061914243.21b04dcd.png"},5486:function(s,t,a){s.exports=a.p+"assets/img/1718062227900.1e93870d.png"},5487:function(s,t,a){s.exports=a.p+"assets/img/1718062314733.6cd196ca.png"},5488:function(s,t,a){s.exports=a.p+"assets/img/1718062404398.7eb9e1c5.png"},5489:function(s,t,a){s.exports=a.p+"assets/img/1718062434384.da7120d6.png"},5490:function(s,t,a){s.exports=a.p+"assets/img/1718062530856.a5a51bd9.png"},5491:function(s,t,a){s.exports=a.p+"assets/img/1718062601469.6eef23d9.png"},5492:function(s,t,a){s.exports=a.p+"assets/img/1718062651998.598a92e8.png"},5493:function(s,t,a){s.exports=a.p+"assets/img/1718062728661.a5e0d8bc.png"},5494:function(s,t,a){s.exports=a.p+"assets/img/1718062879993.ce26ca44.png"},5495:function(s,t,a){s.exports=a.p+"assets/img/1718062977996.dfb5a8ad.png"},5496:function(s,t,a){s.exports=a.p+"assets/img/1718063129380.50873f5a.png"},5497:function(s,t,a){s.exports=a.p+"assets/img/1718063227314.c22e0c56.png"},5498:function(s,t,a){s.exports=a.p+"assets/img/1718063310931.0ac5737f.png"},5499:function(s,t,a){s.exports=a.p+"assets/img/1718063351561.8b7a0280.png"},5500:function(s,t,a){s.exports=a.p+"assets/img/1718063416740.bae38071.png"},5501:function(s,t,a){s.exports=a.p+"assets/img/1718063469624.379eda2b.png"},5502:function(s,t,a){s.exports=a.p+"assets/img/1718063599313.d0fcb55f.png"},5503:function(s,t,a){s.exports=a.p+"assets/img/1718063659054.bdd84a34.png"},5504:function(s,t,a){s.exports=a.p+"assets/img/1718063833797.b35c32e1.png"},5505:function(s,t,a){s.exports=a.p+"assets/img/1718063865295.5bb4e0b7.png"},5506:function(s,t,a){s.exports=a.p+"assets/img/1718063901509.c6bbdf32.png"},5507:function(s,t,a){s.exports=a.p+"assets/img/1718064001546.b3ca22ea.png"},5508:function(s,t,a){s.exports=a.p+"assets/img/1718064121482.085a052d.png"},5509:function(s,t,a){s.exports=a.p+"assets/img/1718064176462.e730a915.png"},5510:function(s,t,a){s.exports=a.p+"assets/img/1718064492868.a8726819.png"},5511:function(s,t,a){s.exports=a.p+"assets/img/1718064568547.93bdf14f.png"},5512:function(s,t,a){s.exports=a.p+"assets/img/1718064677329.63b5b801.png"},5513:function(s,t,a){s.exports=a.p+"assets/img/1718064728223.e51435d8.png"},5514:function(s,t,a){s.exports=a.p+"assets/img/1718065727561.0cee771b.png"},5515:function(s,t,a){s.exports=a.p+"assets/img/1718065777530.6ff47c55.png"},5516:function(s,t,a){s.exports=a.p+"assets/img/1718065866775.ffef0976.png"},5517:function(s,t,a){s.exports=a.p+"assets/img/1718066049985.ba10ff96.png"},5518:function(s,t,a){s.exports=a.p+"assets/img/1718066268831.56c6d846.png"},5519:function(s,t,a){s.exports=a.p+"assets/img/1718066863027.ed79f974.png"},5520:function(s,t,a){s.exports=a.p+"assets/img/1718066908732.d39c7f81.png"},5521:function(s,t,a){s.exports=a.p+"assets/img/1718066993053.1f6593fc.png"},5522:function(s,t,a){s.exports=a.p+"assets/img/1718067146446.5eb95101.png"},9486:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"_1-数据库基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据库基本概念"}},[s._v("#")]),s._v(" 1，数据库基本概念")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("数据")])]),s._v(" "),t("p",[s._v("数据（Data）是指对客观事物进行描述并可以鉴别的符号，这些符号是可识别的、抽象的。它不仅指狭义上的数字，而是有多种表现形式：字母、文字、文本、图形、音频、视频等。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("数据库")])]),s._v(" "),t("p",[s._v("数据库是数据管理的有效技术，是由一批数据构成的有序集合，这些数据被存放在结构化的数据表里。数据表之间相互关联，反映客观事物间的本质联系。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("数据库管理系统")])]),s._v(" "),t("p",[s._v("数据库管理系统（Database Management System，DBMS）是用来定义和管理数据的软件。电脑上安装了数据库管理系统后，就可以通过数据库管理系统创建数据库来存储数据，也可以通过该系统对数据库中的数据进行数据的增删改查相关的操作。我们平时说的MySQL数据库其实是MySQL数据库管理系统。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("数据库管理员")])]),s._v(" "),t("p",[s._v("数据库管理员（Database Administrator，DBA）是指对数据库管理系统进行操作的人员，其主要负责数据库的运营和维护。")])])]),s._v(" "),t("p",[s._v("常见的数据库管理系统：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5465),alt:"1718058438327"}})]),s._v(" "),t("p",[t("strong",[s._v("数据库分类：")])]),s._v(" "),t("ul",[t("li",[s._v("关系型数据库")]),s._v(" "),t("li",[s._v("非关系型数据库")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5466),alt:"1718058747335"}})]),s._v(" "),t("p",[s._v("**关系型数据库：**关系型数据库最典型的数据结构是表，由二维表及其之间的联系所组成的一个数据组 织。可以采用结构化查询语言（SQL）对数据库进行操作。")]),s._v(" "),t("ul",[t("li",[s._v("优点：\n"),t("ul",[t("li",[s._v("易于维护：都是使用表结构，格式一致；")]),s._v(" "),t("li",[s._v("使用方便：SQL语言通用，可用于复杂查询；")]),s._v(" "),t("li",[s._v("复杂操作：支持SQL，可用于一个表以及多个表之间非常复杂的查询。")])])]),s._v(" "),t("li",[s._v("缺点：\n"),t("ul",[t("li",[s._v("读写性能比较差，尤其是海量数据的高效率读写；")]),s._v(" "),t("li",[s._v("固定的表结构，灵活度稍欠；")]),s._v(" "),t("li",[s._v("高并发读写需求，传统关系型数据库来说，硬盘I/O是一个很大的瓶颈。")])])])]),s._v(" "),t("p",[s._v("**非关系型数据库：**非关系型数据库也称之为NoSQL数据库，是一种数据结构化存储方法的集合，可以是文档或者键值对等。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("格式灵活：存储数据的格式可以是key,value形式、文档形式、图片形式等等，文档形式、图片形式等等，使用灵活，应用场景广泛，而关系型数据库则只支持基础类型。")]),s._v(" "),t("li",[s._v("速度快：nosql可以使用硬盘或者随机存储器作为载体，而关系型数据库只能使用硬盘；")]),s._v(" "),t("li",[s._v("高扩展性；")]),s._v(" "),t("li",[s._v("成本低：nosql数据库部署简单，基本都是开源软件。")])])]),s._v(" "),t("li",[t("p",[s._v("缺点：")]),s._v(" "),t("ul",[t("li",[s._v("不提供sql支持，学习和使用成本较高；")]),s._v(" "),t("li",[s._v("无事务处理；")]),s._v(" "),t("li",[s._v("数据结构相对复杂，复杂查询方面稍欠。")])])])]),s._v(" "),t("h3",{attrs:{id:"_2-mysql介绍与安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-mysql介绍与安装"}},[s._v("#")]),s._v(" 2，MySQL介绍与安装")]),s._v(" "),t("p",[s._v("MySQL 是一个关系型数据库管理系统， 由瑞典 MySQL AB 公司开发， 目前属于 Oracle 公司。MySQL 是一种关系型数据库管理系统，关系型数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。")]),s._v(" "),t("p",[t("strong",[s._v("关系型数据库：")])]),s._v(" "),t("ul",[t("li",[s._v("关系型数据库是建立在关系模型基础上的数据库，简单说，关系型数据库是由多张能互相连接的 二维表 组成的数据库")]),s._v(" "),t("li",[s._v("关系型数据库都可以通过SQL进行操作，所以使用方便。")]),s._v(" "),t("li",[s._v("数据存储在磁盘中，安全。")])]),s._v(" "),t("p",[t("code",[s._v("订单信息表")]),s._v(" 和 "),t("code",[s._v("客户信息表")]),s._v(" 都是有行有列二维表我们将这样的称为关系型数据库。如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5467),alt:"1718058918398"}})]),s._v(" "),t("p",[t("strong",[s._v("数据模型：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5468),alt:"1718059255297"}})]),s._v(" "),t("p",[s._v("通过客户端可以通过数据库管理系统创建数据库，在数据库中创建表，在表中添加数据。创建的每一个数据库对应到磁盘上都是一个文件夹。一个数据库下可以创建多张表，我们到MySQL中自带的mysql数据库的文件夹目录下："),t("code",[s._v("db.frm")]),s._v(" 是表文件， "),t("code",[s._v("db.MYD")]),s._v(" 是数据文件，通过这两个文件就可以查询到数据展示成二维表的效果。")]),s._v(" "),t("p",[t("strong",[s._v("MySQL特点：")])]),s._v(" "),t("ul",[t("li",[s._v("MySQL 是开源的。")]),s._v(" "),t("li",[s._v("MySQL 支持大型系统的数据库。可以处理拥有上千万条记录的大型数据库。 MySQL 使用标准的 SQL 数据语言形式。")]),s._v(" "),t("li",[s._v("MySQL 可以运行于多个系统上，并且支持多种语言。这些编程语言包括 C 、C++、 Python 、Java 、Perl 、PHP 等。")]),s._v(" "),t("li",[s._v("MySQL 存储数据量较大，32 位系统表文件最大可支持 4GB ，64 位系统支持最大的 表文件为 8TB。")]),s._v(" "),t("li",[s._v("MySQL 是可以定制的，采用了 GPL 协议，你可以修改源码来开发自己的 MySQL 系 统。")])]),s._v(" "),t("p",[t("strong",[s._v("MySQL分类：")])]),s._v(" "),t("ul",[t("li",[s._v("MySQL分为社区版，社区版是完全开源免费的，社区版也支持多种数据类型和标准的SQL查询语言，能够对数据进行各种查询、增加、删除、修改等操作，所以一般情况下社区版就可以满足开发需求了。")]),s._v(" "),t("li",[s._v("企业版，企业版是收费的。即使在开发中需要用到一些付费的附加功能，价格相对于昂贵的 Oracle、DB2等也是有很大优势的。对数据库可靠性要求比较高的企业可以选择企业版。")])]),s._v(" "),t("p",[s._v("**MySQL的安装：**大家直接安装小皮就行，简单粗暴，这个小皮软件中，内置了很多的软件，其中就包含mysql。如果我们直接下载mysql安装的话，过程比较烦索。如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5469),alt:"1718059108160"}})]),s._v(" "),t("p",[s._v("**Navicat for MySQL安装：**安装了mysql，我后我们可以安装Navicat for MySQL软件，这个软件是用来连接mysql管理系统的。连接上后，可以通过可视化操作mysql。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5470),alt:"1718059392985"}})]),s._v(" "),t("h3",{attrs:{id:"_3-sql语言介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-sql语言介绍"}},[s._v("#")]),s._v(" 3，SQL语言介绍")]),s._v(" "),t("p",[s._v("结构化查询语言(Structured Query Language)简称 SQL(发音：sequal['si:kwəl])，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5471),alt:"1718059491071"}})]),s._v(" "),t("p",[s._v("SQL能做什么：")]),s._v(" "),t("ul",[t("li",[s._v("SQL 面向数据库执行查询")]),s._v(" "),t("li",[s._v("SQL 可在数据库中插入新的记录")]),s._v(" "),t("li",[s._v("SQL 可更新数据库中的数据")]),s._v(" "),t("li",[s._v("SQL 可从数据库删除记录")]),s._v(" "),t("li",[s._v("SQL 可创建新数据库")]),s._v(" "),t("li",[s._v("SQL 可在数据库中创建新表")]),s._v(" "),t("li",[s._v("SQL 可在数据库中创建存储过程")]),s._v(" "),t("li",[s._v("SQL 可在数据库中创建视图")]),s._v(" "),t("li",[s._v("SQL 可以设置表、存储过程和视图的权限")])]),s._v(" "),t("p",[t("strong",[s._v("SQL语言分类：")])]),s._v(" "),t("ol",[t("li",[t("p",[s._v("数据查询语言（DQL：Data Query Language）其语句，也称为“数据检索语句”，用以从表中获得数据，确定数据怎样在应用程序给出。关键字 SELECT 是 DQL（也是所有 SQL）用得最多的动词。（对数据进行查询操作，从数据库表中查询到我们想要的数据）")]),s._v(" "),t("ul",[t("li",[s._v("SELECT")]),s._v(" "),t("li",[s._v("FROM")]),s._v(" "),t("li",[s._v("WHERE")]),s._v(" "),t("li",[s._v("ORDER BY")]),s._v(" "),t("li",[s._v("HAVING")])])]),s._v(" "),t("li",[t("p",[s._v("数据操作语言（DML：Data Manipulation Language）其语句包括动词 INSERT，UPDATE 和 DELETE。它们分别用于添加，修改和删除表中的行（对表中数据进行增删改的）。")]),s._v(" "),t("ul",[t("li",[s._v("INSERT：添加数据")]),s._v(" "),t("li",[s._v("UPDATE：更新数据")]),s._v(" "),t("li",[s._v("DELETE：删除数据")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5472),alt:"1718059634139"}})])]),s._v(" "),t("li",[t("p",[s._v("数据定义语言（DDL：Data Definition Language）定义数据库对象语言，其语句包括动词 CREATE 和 DROP 等。（就是用来操作数据库，表等）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("CREATE：创建数据库对象")])]),s._v(" "),t("li",[t("p",[s._v("ALTER：修改数据库对象")])]),s._v(" "),t("li",[t("p",[s._v("DROP：删除数据库对象")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5473),alt:"1718059694547"}})])])])]),s._v(" "),t("li",[t("p",[s._v("数据控制语言（DCL：Data Control Language）它的语句通过 GRANT 或 REVOKE 获得许可，确定用户对数据库对象的访问。")]),s._v(" "),t("ul",[t("li",[s._v("GRANT：授予用户某种权限")]),s._v(" "),t("li",[s._v("REVOKE：回收授予的某种权限")])])]),s._v(" "),t("li",[t("p",[s._v("事务控制语言（TCL ：Transaction Control Language）它的语句能确保被 DML 语句影响的表的所有行及时得以更新。")]),s._v(" "),t("ul",[t("li",[s._v("COMMIT：提交事务")]),s._v(" "),t("li",[s._v("ROLLBACK：回滚事务")]),s._v(" "),t("li",[s._v("SAVEPOINT：设置回滚点")])])])]),s._v(" "),t("p",[t("strong",[s._v("SQL语言的语法：")])]),s._v(" "),t("ul",[t("li",[s._v("SQL语句不区分大小写，关键字建议大写。")]),s._v(" "),t("li",[s._v("SQL语句可以单行或多行书写，以分号结尾。")]),s._v(" "),t("li",[s._v("单行注释: -- 注释内容 或 #注释内容(MySQL 特有)。使用-- 添加单行注释时，--后面一定要加空格，而#没有要求。")]),s._v(" "),t("li",[s._v("多行注释: /* 注释 */")])]),s._v(" "),t("h3",{attrs:{id:"_4-ddl操作数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-ddl操作数据库"}},[s._v("#")]),s._v(" 4，DDL操作数据库")]),s._v(" "),t("p",[s._v("使用DDL语句创建数据库：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v("  数据库名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARACTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v("  字符编码"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建一个test 的数据库，并查看该数据库，以及该数据库的编码。创建数据库：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("database")]),s._v(" test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5474),alt:"1718071539779"}})]),s._v(" "),t("p",[s._v("查看数据库：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("databases")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5475),alt:"1718071603745"}})]),s._v(" "),t("p",[s._v("查看数据库编码：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" schema_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("default_character_set_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" information_schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("schemata \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" schema_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5476),alt:"1718072443525"}})]),s._v(" "),t("p",[s._v("使用DDL语言删除数据库:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v("  数据库名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除 test 数据库，删除完后需要刷新一下:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("database")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在创建表时，需要先选择数据库:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USE")]),s._v(" 数据库名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建一个名称为 malu 的数据库，编码为 utf8。并选择该数据库：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("database")]),s._v(" malu "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" malu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("已经有了malu数据库，再去创建时，就会报错，如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5477),alt:"1718072709733"}})]),s._v(" "),t("p",[s._v("为了避免上面的错误，在创建数据库的时候先做判断，如果不存在再创建。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" malu "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARACTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5478),alt:"1718072758617"}})]),s._v(" "),t("p",[s._v("同理，在删除数据库时，也可以做一个判断：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" malu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5479),alt:"1718072849548"}})]),s._v(" "),t("p",[s._v("数据库创建好了，要在数据库中创建表，得先明确在哪儿个数据库中操作，此时就需要使用数据库。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("database")]),s._v(" malu "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" malu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("查看当前使用的数据库：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5480),alt:"1718072948173"}})]),s._v(" "),t("h3",{attrs:{id:"_5-mysql中的数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-mysql中的数据类型"}},[s._v("#")]),s._v(" 5，MYSQL中的数据类型")]),s._v(" "),t("p",[s._v("不同的数据，要开辟不同的存储空间，目的就是为了更加合理地使用存储空间。")]),s._v(" "),t("p",[t("strong",[s._v("整数类型：")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("MySQL数据类型")])]),s._v(" "),t("th",[t("strong",[s._v("含义（有符号）")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("tinyint(m)")]),s._v(" "),t("td",[s._v("1个字节 范围(-128~127)")])]),s._v(" "),t("tr",[t("td",[s._v("smallint(m)")]),s._v(" "),t("td",[s._v("2个字节 范围(-32768~32767)")])]),s._v(" "),t("tr",[t("td",[s._v("mediumint(m)")]),s._v(" "),t("td",[s._v("3个字节 范围(-8388608~8388607)")])]),s._v(" "),t("tr",[t("td",[s._v("int(m)")]),s._v(" "),t("td",[s._v("4个字节 范围(-2147483648~2147483647)")])]),s._v(" "),t("tr",[t("td",[s._v("bigint(m)")]),s._v(" "),t("td",[s._v("8个字节 范围(+-9.22*10的18次方)")])])])]),s._v(" "),t("p",[s._v("数值类型中的长度 m 是指显示长度，并不表示存储长度，只有字段指定 zerofill 时有用。例如： int(3) ，如果实际值是 2 ，如果列指定了 zerofill ，查询结果就是 002 ，左边用 0 来 填充")]),s._v(" "),t("p",[s._v("使用最多的：tinyint和int")]),s._v(" "),t("ul",[t("li",[s._v("tinyint : 小整数型，占一个字节")]),s._v(" "),t("li",[s._v("int： 大整数类型，占四个字节。eg： age int")])]),s._v(" "),t("p",[t("strong",[s._v("浮点类型：")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("MySQL数据类型")])]),s._v(" "),t("th",[t("strong",[s._v("含义")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("float(m,d)")]),s._v(" "),t("td",[s._v("单精度浮点型 8位精度(4字节) m总个数，d小数位")])]),s._v(" "),t("tr",[t("td",[s._v("double(m,d)")]),s._v(" "),t("td",[s._v("双精度浮点型 16位精度(8字节) m总个数，d小数位")])])])]),s._v(" "),t("p",[s._v("double ： 浮点类型，使用格式： 字段名 double(总长度, 小数点后保留的位数)。eg： score double(5, 2)")]),s._v(" "),t("p",[t("strong",[s._v("字符类型：")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("MySQL数据类型")])]),s._v(" "),t("th",[t("strong",[s._v("含义")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("char(n)")]),s._v(" "),t("td",[s._v("固定长度，最多255个字符")])]),s._v(" "),t("tr",[t("td",[s._v("tinytext")]),s._v(" "),t("td",[s._v("可变长度，最多255个字符")])]),s._v(" "),t("tr",[t("td",[s._v("varchar(n)")]),s._v(" "),t("td",[s._v("可变长度，最多65535个字符")])]),s._v(" "),t("tr",[t("td",[s._v("text")]),s._v(" "),t("td",[s._v("可变长度，最多65535个字符")])]),s._v(" "),t("tr",[t("td",[s._v("mediumtext")]),s._v(" "),t("td",[s._v("可变长度，最多2的24次方-1个字符")])]),s._v(" "),t("tr",[t("td",[s._v("longtext")]),s._v(" "),t("td",[s._v("可变长度，最多2的32次方-1个字符")])])])]),s._v(" "),t("p",[s._v("char和varchar：")]),s._v(" "),t("ol",[t("li",[s._v("char长度固定， 即每条数据占用等长字节空间；适合用在身份证号码、手机号码等定长。")]),s._v(" "),t("li",[s._v("varchar可变长度，可以设置最大长度；适合用在长度可变的属性。")]),s._v(" "),t("li",[s._v("text不设置长度， 当不知道属性的最大长度时，适合用text。")]),s._v(" "),t("li",[s._v("按照查询速度： char最快， varchar次之，text最慢。")])]),s._v(" "),t("p",[s._v("总结 char和varchar：")]),s._v(" "),t("ul",[t("li",[s._v("char： 定长字符串。优点：存储性能高。缺点：浪费空间。eg： name char(10) 如果存储的数据字符个数不足10个，也会占10个的空间")]),s._v(" "),t("li",[s._v("varchar： 变长字符串。优点：节约空间。缺点：存储性能底。eg： name varchar(10) 如果存储的数据字符个数不足10个，那就数据字符个数是几就占几个的空间")])]),s._v(" "),t("p",[s._v("字符串型使用建议：")]),s._v(" "),t("ol",[t("li",[s._v("经常变化的字段用varchar")]),s._v(" "),t("li",[s._v("知道固定长度的用char")]),s._v(" "),t("li",[s._v("尽量用varchar")]),s._v(" "),t("li",[s._v("超过255字符的只能用varchar或者text")]),s._v(" "),t("li",[s._v("能用varchar的地方不用text")])]),s._v(" "),t("p",[t("strong",[s._v("日期类型：")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("MySQL数据类型")])]),s._v(" "),t("th",[t("strong",[s._v("含义")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("date")]),s._v(" "),t("td",[s._v("日期 YYYY-MM-DD")])]),s._v(" "),t("tr",[t("td",[s._v("time")]),s._v(" "),t("td",[s._v("时间 HH:MM:SS")])]),s._v(" "),t("tr",[t("td",[s._v("datetime")]),s._v(" "),t("td",[s._v("日期时间 YYYY-MM-DD HH:MM:SS")])]),s._v(" "),t("tr",[t("td",[s._v("timestamp")]),s._v(" "),t("td",[s._v("时间戳YYYYMMDD HHMMSS")])])])]),s._v(" "),t("ul",[t("li",[s._v("date：日期值。只包含年月日。eg：birthday date ：")]),s._v(" "),t("li",[s._v("datetime ： 混合日期和时间值。包含年月日时分秒")])]),s._v(" "),t("p",[t("strong",[s._v("二进制数据(BLOB)：")])]),s._v(" "),t("ol",[t("li",[s._v("BLOB和TEXT存储方式不同，TEXT以文本方式存储，英文存储区分大小写，而Blob是以二进制方式存储，不分大小写。")]),s._v(" "),t("li",[s._v("BLOB存储的数据只能整体读出。")]),s._v(" "),t("li",[s._v("TEXT可以指定字符集，BLOB不用指定字符集。")])]),s._v(" "),t("p",[s._v("总结：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5481),alt:"1718060762837"}})]),s._v(" "),t("h3",{attrs:{id:"_5-ddl操作表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-ddl操作表"}},[s._v("#")]),s._v(" 5，DDL操作表")]),s._v(" "),t("p",[s._v("使用DDL语句创建表：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列名 类型"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("列名 类型"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建一个 employees 表包含雇员 ID ，雇员名字，雇员薪水:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("employee_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("employee_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5482),alt:"1718074022419"}})]),s._v(" "),t("p",[s._v("查看已创建的表:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(5483),alt:"1718074050707"}})]),s._v(" "),t("p",[s._v("使用DDL语句删除表：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除 employees 表:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用DDL语句修改表:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v("  旧表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RENAME")]),s._v("  新表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建一个 employees 表包含雇员 ID ，雇员名字，雇员薪水:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("employee_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("employee_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将 employees 表名修改为 emp:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rename")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用DDL语句修改列名:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v("  表名 CHANGE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),s._v("  旧列名 新列名 类型"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将 emp 表中的 employee_name 修改为 name:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" emp change "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" employee_name name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用DDL语句修改列类型:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v("  表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MODIFY")]),s._v("  列名 新类型"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将 emp 表中的 name 的长度指定为 40:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("modify")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用DDL语句添加新列:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v("  表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),s._v("  新列名 类型"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在 emp 表中添加佣金列，列名为 commission_pct:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" commission_pct "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用DDL语句删除指定的列:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v("  表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),s._v("  列名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除 emp 表中的 commission_pct:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_6-mysql中的约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-mysql中的约束"}},[s._v("#")]),s._v(" 6，MySQL中的约束")]),s._v(" "),t("p",[s._v("看如下表：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5484),alt:"1718061428571"}})]),s._v(" "),t("p",[s._v("上面表存在的一些问题：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("id 列一般是用标示数据的唯一性的，而上述表中的id为1的有三条数据，并且 "),t("code",[s._v("马花疼")]),s._v(" 没有id进行标示")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("柳白")]),s._v(" 这条数据的age列的数据是3000，而人也不可能活到3000岁")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("马运")]),s._v(" 这条数据的math数学成绩是-5，而数学学得再不好也不可能出现负分")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("柳青")]),s._v(" 这条数据的english列（英文成绩）值为null，而成绩即使没考也得是0分")])])]),s._v(" "),t("p",[s._v("针对上面的遇到的问题，从数据库层面在添加数据的时候进行限制，这个就是约束。约束是作用于表中列上的规则，用于限制加入表的数据。例如：我们可以给id列加约束，让其值不能重复，不能为null值。")]),s._v(" "),t("p",[s._v("约束的存在保证了数据库中数据的正确性、有效性和完整性。添加约束可以在添加数据的时候就限制不正确的数据，年龄是3000，数学成绩是-5分这样无效的数据，继而保障数据的完整性。")]),s._v(" "),t("p",[s._v("数据库约束是对表中的数据进行进一步的限制，保证数据的正确性、有效性和完整性。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("主键约束(Primary Key) PK")]),s._v(" "),t("blockquote",[t("p",[s._v("主键约束是使用最频繁的约束。在设计数据表时，一般情况下，都会要求表中设置一个主键。 主键是表的一个特殊字段，该字段能唯一标识该表中的每条信息。例如，学生信息表中的学号是唯一的。")]),s._v(" "),t("p",[s._v("主键是一行数据的唯一标识，要求非空且唯一。一般我们都会给没张表添加一个主键列用来唯一标识数据。")]),s._v(" "),t("p",[s._v("例如：上图表中id就可以作为主键，来标识每条数据。那么这样就要求数据中id的值不能重复，不能为null值。")])])]),s._v(" "),t("li",[t("p",[s._v("外键约束(Foreign Key) FK")]),s._v(" "),t("blockquote",[t("p",[s._v("外键约束经常和主键约束一起使用，用来确保数据的一致性。")]),s._v(" "),t("p",[s._v("外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。")]),s._v(" "),t("p",[s._v("外键约束现在可能还不太好理解，后面我们会重点进行讲解。")])])]),s._v(" "),t("li",[t("p",[s._v("唯一性约束(Unique)")]),s._v(" "),t("blockquote",[t("p",[s._v("唯一约束与主键约束有一个相似的地方，就是它们都能够确保列的唯一性。与主键约束不同的是，唯一约束在一个表中可以有多个，并且设置唯一约束的列是允许有空值的。")]),s._v(" "),t("p",[s._v("保证列中所有数据各不相同。")]),s._v(" "),t("p",[s._v("例如：id列中三条数据的值都是1，这样的数据在添加时是绝对不允许的。")])])]),s._v(" "),t("li",[t("p",[s._v("非空约束(Not Null)")]),s._v(" "),t("blockquote",[t("p",[s._v("非空约束用来约束表中的字段不能为空。")]),s._v(" "),t("p",[s._v("保证列中所有的数据不能有null值。")]),s._v(" "),t("p",[s._v("例如：id列在添加 "),t("code",[s._v("马花疼")]),s._v(" 这条数据时就不能添加成功。")])])]),s._v(" "),t("li",[t("p",[s._v("检查约束(Check)")]),s._v(" "),t("blockquote",[t("p",[s._v("检查约束也叫用户自定义约束，是用来检查数据表中，字段值是否有效的一个手段，但目前 MySQL 数据库不支持检查约束。")]),s._v(" "),t("p",[s._v("保证列中的值满足某一条件。")]),s._v(" "),t("p",[s._v("例如：我们可以给age列添加一个范围，最低年龄可以设置为1，最大年龄就可以设置为300，这样的数据才更合理些。")]),s._v(" "),t("p",[s._v("MySQL不支持检查约束。从数据库层面不能保证，以后可以在java代码中进行限制，一样也可以实现要求。")])])]),s._v(" "),t("li",[t("p",[s._v("默认约束： 关键字是 DEFAULT")]),s._v(" "),t("blockquote",[t("p",[s._v("保存数据时，未指定值则采用默认值。")]),s._v(" "),t("p",[s._v("例如：我们在给english列添加该约束，指定默认值是0，这样在添加数据时没有指定具体值时就会采用默认给定的0。")])])])]),s._v(" "),t("h3",{attrs:{id:"_7-dql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-dql"}},[s._v("#")]),s._v(" 7，DQL")]),s._v(" "),t("h4",{attrs:{id:"a-select基本查询介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-select基本查询介绍"}},[s._v("#")]),s._v(" a）select基本查询介绍")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5485),alt:"1718061914243"}})]),s._v(" "),t("p",[s._v("SELECT 语句从数据库中返回信息。使用一个 SELECT 语句，可以做下面的事：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("**列选择：**能够使用 SELECT 语句的列选择功能选择表中的列，这些列是想")]),s._v(" "),t("p",[s._v("要用查询返回的。当查询时，能够返回列中的数据。")])]),s._v(" "),t("li",[t("p",[s._v("**行选择：**能够使用 SELECT 语句的行选择功能选择表中的行，这些行是想")]),s._v(" "),t("p",[s._v("要用查询返回的。能够使用不同的标准限制看见的行。")])]),s._v(" "),t("li",[t("p",[s._v("**连接：**能够使用 SELECT 语句的连接功能来集合数据，这些数据被存储在不")]),s._v(" "),t("p",[s._v("同的表中，在它们之间可以创建连接，查询出我们所关心的数据。")])])]),s._v(" "),t("p",[t("strong",[s._v("SELECT基本语法：")])]),s._v(" "),t("p",[s._v("在最简单的形式中，SELECT 语句必须包含下面的内容：")]),s._v(" "),t("ul",[t("li",[s._v("一个 SELECT 子句，指定被显示的列")]),s._v(" "),t("li",[s._v("一个 FROM 子句，指定表，该表包含 SELECT 子句中的字段列表")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("语句")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("SELECT")]),s._v(" "),t("td",[s._v("是一个或多个字段的列表")])]),s._v(" "),t("tr",[t("td",[s._v("*")]),s._v(" "),t("td",[s._v("选择所有的列")])]),s._v(" "),t("tr",[t("td",[s._v("DISTINCT")]),s._v(" "),t("td",[s._v("禁止重复")])]),s._v(" "),t("tr",[t("td",[s._v("column | expression")]),s._v(" "),t("td",[s._v("选择指定的字段或表达式")])]),s._v(" "),t("tr",[t("td",[s._v("alias")]),s._v(" "),t("td",[s._v("给所选择的列不同的标题")])]),s._v(" "),t("tr",[t("td",[s._v("FROM table")]),s._v(" "),t("td",[s._v("指定包含列的表")])])])]),s._v(" "),t("h4",{attrs:{id:"b-选择所有列和指定列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-选择所有列和指定列"}},[s._v("#")]),s._v(" b）选择所有列和指定列")]),s._v(" "),t("p",[s._v("选择所有列：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5486),alt:"1718062227900"}})]),s._v(" "),t("p",[s._v("用跟在 SELECT 关键字后面的星号 (*)，你能够显示表中数据的所有列。")]),s._v(" "),t("p",[s._v("示例：查询 departments 表中的所有数据。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" departments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("选择指定列：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5487),alt:"1718062314733"}})]),s._v(" "),t("p",[s._v("能够用 SELECT 语句来显示表的指定列，指定列名之间用逗号分隔。")]),s._v(" "),t("p",[s._v("示例：查询 departments 表中所有部门名称。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" department_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" departments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"c-查询中的算术表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-查询中的算术表达式"}},[s._v("#")]),s._v(" c）查询中的算术表达式")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5488),alt:"1718062404398"}})]),s._v(" "),t("p",[s._v("需要修改数据显示方式，如执行计算，或者作假定推测，这些都可能用到算术表达式。一个算术表达式可以包含列名、固定的数字值和算术运算符。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5489),alt:"1718062434384"}})]),s._v(" "),t("p",[s._v("查询雇员的年薪，并显示他们的雇员ID，名字。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employees_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("运算符的优先级：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5490),alt:"1718062530856"}})]),s._v(" "),t("p",[s._v("如果算术表达式包含有一个以上的运算，乘法和除法先计算。如果在一个表达式中的运算符优先级相同，计算从左到右进行。可以用圆括号强制其中的表达式先计算。")]),s._v(" "),t("p",[s._v("计算 employees 表中的员工全年薪水加 100 以后的薪水是多少，并显示他们的员工ID与名字。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employees_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("计算 employees 表中的员工薪水加 100 以后的全年薪水是多少，并显示他们的员工ID与名字。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employees_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"d-mysql中定义空值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d-mysql中定义空值"}},[s._v("#")]),s._v(" d）mysql中定义空值")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5491),alt:"1718062601469"}})]),s._v(" "),t("p",[s._v("如果一行中的某个列缺少数据值，该值被置为 "),t("em",[s._v("null")]),s._v("， 或者说包含一个空。空是一个难以获得的、未分配的、未知的，或不适用的值。空和 0 或者空格不相同。 0 是一个数字，而空格是一个字符。")]),s._v(" "),t("p",[t("strong",[s._v("算术表达式中的空值")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5492),alt:"1718062651998"}})]),s._v(" "),t("p",[s._v("计算年薪包含佣金：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("commission_pct "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"e-别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#e-别名"}},[s._v("#")]),s._v(" e）别名")]),s._v(" "),t("p",[t("strong",[s._v("使用列别名：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5493),alt:"1718062728661"}})]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("  列名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v("  列别名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("  表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("  条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表将雇员 last_name 列定义别名为 name:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("使用表别名:")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("  表别名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("  表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" 表别名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("  条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表为表定义别名为emp，将雇员 last_name 列定义别名为 name：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("last_name name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"f-mysql去重复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#f-mysql去重复"}},[s._v("#")]),s._v(" f）mysql去重复")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5494),alt:"1718062879993"}})]),s._v(" "),t("p",[s._v("去掉相同的行：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5495),alt:"1718062977996"}})]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" 列名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表，显示唯一的部门 ID:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" department_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"g-查询中的行选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g-查询中的行选择"}},[s._v("#")]),s._v(" g）查询中的行选择")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5496),alt:"1718063129380"}})]),s._v(" "),t("p",[s._v("用 WHERE 子句限制从查询返回的行。一个 WHERE 子句包含一个必须满足的条件，WHERE 子句紧跟着 FROM 子句。如果条件是 true，返回满足条件的行。")]),s._v(" "),t("p",[s._v("在语法中：WHERE 限制查询满足条件的行。"),t("em",[s._v("condition")]),s._v(" 由列名、表达式、常数和比较操作组成")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  投影列 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("  表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("  选择条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 departments 表中部门 ID 为 90 的部门名称与工作地点 ID:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" department_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("location_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" departments "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"h-mysql中的比较条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#h-mysql中的比较条件"}},[s._v("#")]),s._v(" h）mysql中的比较条件")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5497),alt:"1718063227314"}})]),s._v(" "),t("p",[s._v("符号 != 也能够表示 不等于条件。")]),s._v(" "),t("p",[s._v("查询 employees 表中员工薪水大于等于 3000 的员工的姓名与薪水：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表中员工薪水不等于 5000 的员工的姓名与薪水:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"i-其它比较条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i-其它比较条件"}},[s._v("#")]),s._v(" i）其它比较条件")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5498),alt:"1718063310931"}})]),s._v(" "),t("p",[s._v("可以用 BETWEEN 范围条件显示基于一个值范围的行。指定的范围包含一个下限和一个上限。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5499),alt:"1718063351561"}})]),s._v(" "),t("p",[s._v("查询 employees 表，薪水在 3000-8000 之间的雇员ID、名字与薪水：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用IN条件:")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5500),alt:"1718063416740"}})]),s._v(" "),t("p",[s._v("查询 employees 表，找出薪水是 5000,6000,8000 的雇员ID、名字与薪水:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用LIKE条件:")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5501),alt:"1718063469624"}})]),s._v(" "),t("p",[s._v("查询 employees 中雇员名字第二个字母是 e 的雇员名字:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_e%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用NULL条件:")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5502),alt:"1718063599313"}})]),s._v(" "),t("p",[s._v("NULL 条件，包括 IS NULL 条件和 IS NOT NULL 条件。IS NULL 条件用于空值测试。空值的意思是难以获得的、未指定的、未知的或者不适用的。因此，你不能用 = ，因为 null 不能等于或不等于任何值。")]),s._v(" "),t("p",[s._v("找出 emloyees 表中那些没有佣金的雇员雇员ID、名字与佣金:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("commission_pct "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" commission_pct "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("找出 employees 表中那些有佣金的雇员ID、名字与佣金:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("commission_pct "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" commission_pct "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"j-逻辑条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#j-逻辑条件"}},[s._v("#")]),s._v(" j）逻辑条件")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5503),alt:"1718063659054"}})]),s._v(" "),t("p",[s._v("逻辑条件组合两个比较条件的结果来产生一个基于这些条件的单个的结果，或者逆转一个单个条件的结果。当所有条件的结果为真时，返回行。SQL 的三个逻辑运算符是：")]),s._v(" "),t("ul",[t("li",[s._v("AND")]),s._v(" "),t("li",[s._v("OR")]),s._v(" "),t("li",[s._v("NOT")])]),s._v(" "),t("p",[s._v("可以在 WHERE 子句中用 AND 和 OR 运算符使用多个条件。")]),s._v(" "),t("p",[s._v("查询 employees 表中雇员薪水是 8000 的并且名字中含有e 的雇员名字与薪水：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%e%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表中雇员薪水是 8000 的或者名字中含有e 的雇员名字与薪水:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%e%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表中雇员名字中不包含 u 的雇员的名字:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%u%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"k-优先规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k-优先规则"}},[s._v("#")]),s._v(" k）优先规则")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5504),alt:"1718063833797"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(5505),alt:"1718063865295"}})]),s._v(" "),t("p",[s._v("在图片的例子中，有两个条件：")]),s._v(" "),t("ul",[t("li",[s._v("第一个条件是 job_id 是 AD_PRES 并且薪水高于 15,000。")]),s._v(" "),t("li",[s._v("第二个条件是 job_id 是 SA_REP。")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5506),alt:"1718063901509"}})]),s._v(" "),t("p",[s._v("在图片中的例子有两个条件：")]),s._v(" "),t("ul",[t("li",[s._v("第一个条件是 job_id 是 AD_PRES 或者 SA_REP 。")]),s._v(" "),t("li",[s._v("第二个条件是薪水高于$15,000")])]),s._v(" "),t("h4",{attrs:{id:"l-order-by排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#l-order-by排序"}},[s._v("#")]),s._v(" l）order by排序")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5507),alt:"1718064001546"}})]),s._v(" "),t("p",[s._v("在一个不明确的查询结果中排序返回的行。ORDER BY 子句用于排序。如果使用了 ORDER BY 子句，它必须位于 SQL 语句的最后。")]),s._v(" "),t("p",[t("strong",[s._v("SELECT 语句的执行顺序如下：")])]),s._v(" "),t("ul",[t("li",[s._v("FROM 子句")]),s._v(" "),t("li",[s._v("WHERE 子句")]),s._v(" "),t("li",[s._v("SELECT 子句")]),s._v(" "),t("li",[s._v("ORDER BY 子句")])]),s._v(" "),t("p",[s._v("查询 employees 表中的所有雇员，显示他们的ID、名字与薪水，并按薪水升序排序：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("查询 employees 表中的所有雇员，显示他们的ID与名字，并按雇员名字降序排序:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用别名排序：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5508),alt:"1718064121482"}})]),s._v(" "),t("p",[s._v("显示雇员ID，名字。计算雇员的年薪，年薪列别名为annsal，并对该列进行升序排序:")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary annsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" annsal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("多列排序：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5509),alt:"1718064176462"}})]),s._v(" "),t("p",[s._v("以升叙排序显示 DEPARTMENT_ID 列，同时以降序排序显示 SALARY 列：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" department_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" department_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"m-实操"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#m-实操"}},[s._v("#")]),s._v(" m）实操")]),s._v(" "),t("p",[s._v("创建一个查询，显示收入超过 12,000 的雇员的名字和薪水。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SALARY\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" SALARY "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("创建一个查询，显示雇员号为 176 的雇员的名字和部门号。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("DEPARTMENT_ID\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" EMPLOYEE_ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("176")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("显示所有薪水不在 5000 和 12000 之间的雇员的名字和薪水。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SALARY\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("显示所有在部门 20 和 50 中的雇员的名字和部门号，并以名字按字母顺序排序。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("LAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("DEPARTMENT_ID\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" DEPARTMENT_ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" LAST_NAME "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("列出收入在 5,000 和 12,000 之间，并且在部门 20 或50 工作的雇员的名字和薪水。将列标题分别显示为 Employee 和 Monthly Salary")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME Employee"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SALARY "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Monthly Salary'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" SALARY "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v("\nDEPARTMENT_ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("显示所有没有主管经理的雇员的名字和工作岗位。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("JOB_ID\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" MANAGER_ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("显示所有有佣金的雇员的名字、薪水和佣金。以薪水和佣金的降序排序数据。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("COMMISSION_PCT\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" COMMISSION_PCT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" SALARY "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" COMMISSION_PCT "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("显示所有名字中有一个 a 和一个 e 的雇员的名字。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" LAST_NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%a%'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v("\nLAST_NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%e%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("显示所有工作岗位是销售代表（SA_REP）或者普通职员(ST_CLERK)，并且薪水不等于 2,500、3,500 或 7,000 的雇员的名字、工作岗位和薪水。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("JOB_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SALARY\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\nJOB_ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SA_REP'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ST_CLERK'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v("\nSALARY "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_8-sql中的函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-sql中的函数"}},[s._v("#")]),s._v(" 8，sql中的函数")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5510),alt:"1718064492868"}})]),s._v(" "),t("p",[s._v("函数是 SQL 的一个非常强有力的特性，函数能够用于下面的目的：")]),s._v(" "),t("ul",[t("li",[s._v("执行数据计算")]),s._v(" "),t("li",[s._v("修改单个数据项")]),s._v(" "),t("li",[s._v("操纵输出进行行分组")]),s._v(" "),t("li",[s._v("格式化显示的日期和数字")]),s._v(" "),t("li",[s._v("转换列数据类型")])]),s._v(" "),t("p",[s._v("SQL 函数有输入参数，并且总有一个返回值。函数分类：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5511),alt:"1718064568547"}})]),s._v(" "),t("ol",[t("li",[t("p",[s._v("单行函数：单行函数仅对单个行进行运算，并且每行返回一个结果。")]),s._v(" "),t("p",[s._v("常见的函数类型：")]),s._v(" "),t("ul",[t("li",[s._v("字符")]),s._v(" "),t("li",[s._v("数字")]),s._v(" "),t("li",[s._v("日期")]),s._v(" "),t("li",[s._v("转换")])])]),s._v(" "),t("li",[t("p",[s._v("多行函数：多行函数能够操纵成组的行，每个行组给出一个结果，这些函数也被称为组函数。")])])]),s._v(" "),t("h4",{attrs:{id:"a-单行函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-单行函数"}},[s._v("#")]),s._v(" a）单行函数")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5512),alt:"1718064677329"}})]),s._v(" "),t("p",[t("strong",[s._v("单行函数分类：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5513),alt:"1718064728223"}})]),s._v(" "),t("h4",{attrs:{id:"b-字符函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-字符函数"}},[s._v("#")]),s._v(" b）字符函数")]),s._v(" "),t("p",[t("strong",[s._v("大小写处理函数：")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("函数")])]),s._v(" "),t("th",[s._v("描述")]),s._v(" "),t("th",[s._v("实例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("LOWER(s)|LCASE(s)")]),s._v(" "),t("td",[s._v("将字符串 s 转换为小写")]),s._v(" "),t("td",[s._v("将字符串 OLDLU转换为小写："),t("code",[s._v('SELECT LOWER("OLDLU"); -- oldlu')])])]),s._v(" "),t("tr",[t("td",[s._v("UPPER(s)|UCASE(s)")]),s._v(" "),t("td",[s._v("将字符串s转换为大写")]),s._v(" "),t("td",[s._v("将字符串 oldlu转换为大写："),t("code",[s._v('SELECT UPPER("oldlu"); -- OLDLU')])])])])]),s._v(" "),t("p",[s._v("显示雇员 Davies 的雇员号、姓名和部门号，将姓名转换为大写。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("UPPER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("department_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'davies'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("字符处理函数:")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数")]),s._v(" "),t("th",[s._v("描述")]),s._v(" "),t("th",[s._v("实例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("LENGTH(s)")]),s._v(" "),t("td",[s._v("返回字符串 s 的长度")]),s._v(" "),t("td",[s._v("返回字符串oldlu的字符数"),t("code",[s._v('SELECT LENGTH("oldlu"); --5;')])])]),s._v(" "),t("tr",[t("td",[s._v("CONCAT(s1,s2...sn)")]),s._v(" "),t("td",[s._v("字符串 s1,s2 等多个字符串合并为一个字符串")]),s._v(" "),t("td",[s._v("合并多个字符串"),t("code",[s._v('SELECT CONCAT("sxt ", "teacher ", "oldlu"); --sxt teacher oldlu;')])])]),s._v(" "),t("tr",[t("td",[s._v("LPAD(s1,len,s2)")]),s._v(" "),t("td",[s._v("在字符串 s1 的开始处填充字符串 s2，使字符串长度达到 len")]),s._v(" "),t("td",[s._v("将字符串 x 填充到 oldlu字符串的开始处："),t("code",[s._v("SELECT LPAD('oldlu',8,'x'); -- xxxoldlu")])])]),s._v(" "),t("tr",[t("td",[s._v("LTRIM(s)")]),s._v(" "),t("td",[s._v("去掉字符串 s 开始处的空格")]),s._v(" "),t("td",[s._v("去掉字符串 oldlu开始处的空格："),t("code",[s._v('SELECT LTRIM(" oldlu") ;-- oldlu')])])]),s._v(" "),t("tr",[t("td",[s._v("REPLACE(s,s1,s2)")]),s._v(" "),t("td",[s._v("将字符串 s2 替代字符串 s 中的字符串 s1")]),s._v(" "),t("td",[s._v("将字符串 oldlu 中的字符 o 替换为字符 O："),t("code",[s._v("SELECT REPLACE('oldlu','o','O'); --Oldlu")])])]),s._v(" "),t("tr",[t("td",[s._v("REVERSE(s)")]),s._v(" "),t("td",[s._v("将字符串s的顺序反过来")]),s._v(" "),t("td",[s._v("将字符串 abc 的顺序反过来："),t("code",[s._v("SELECT REVERSE('abc'); -- cba")])])]),s._v(" "),t("tr",[t("td",[s._v("RPAD(s1,len,s2)")]),s._v(" "),t("td",[s._v("在字符串 s1 的结尾处添加字符串 s2，使字符串的长度达到 len")]),s._v(" "),t("td",[s._v("将字符串 xx填充到 oldlu字符串的结尾处："),t("code",[s._v("SELECT RPAD('oldlu',8,'x'); -- oldluxxx")])])]),s._v(" "),t("tr",[t("td",[s._v("RTRIM(s)")]),s._v(" "),t("td",[s._v("去掉字符串 s 结尾处的空格")]),s._v(" "),t("td",[s._v("去掉字符串 oldlu 的末尾空格："),t("code",[s._v('SELECT RTRIM("oldlu "); -- oldlu')])])]),s._v(" "),t("tr",[t("td",[s._v("SUBSTR(s, start, length)")]),s._v(" "),t("td",[s._v("从字符串 s 的 start 位置截取长度为 length 的子字符串")]),s._v(" "),t("td",[s._v("从字符串 OLDLU中的第 2 个位置截取 3个 字符："),t("code",[s._v('SELECT SUBSTR("OLDLU", 2, 3); -- LDL')])])]),s._v(" "),t("tr",[t("td",[s._v("SUBSTRING(s, start, length)")]),s._v(" "),t("td",[s._v("从字符串 s 的 start 位置截取长度为 length 的子字符串")]),s._v(" "),t("td",[s._v("从字符串 OLDLU中的第 2 个位置截取 3个 字符："),t("code",[s._v('SELECT SUBSTRING("OLDLU", 2, 3); --LDL')])])]),s._v(" "),t("tr",[t("td",[s._v("TRIM(s)")]),s._v(" "),t("td",[s._v("去掉字符串 s 开始和结尾处的空格")]),s._v(" "),t("td",[s._v("去掉字符串 oldlu 的首尾空格："),t("code",[s._v("SELECT TRIM(' oldlu ');--oldlu")])])])])]),s._v(" "),t("p",[s._v("显示所有工作岗位名称从第 4 个字符位置开始，包含字符串 REP的雇员的ID信息，将雇员的姓和名连接显示在一起，还显示雇员名的的长度，以及名字中字母 a 的位置。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" CONCAT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name，first_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \njob_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LENGTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("INSTR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Contains 'a'?\"")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" SUBSTR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("job_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'REP'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"c-数学函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-数学函数"}},[s._v("#")]),s._v(" c）数学函数")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数名")]),s._v(" "),t("th",[s._v("描述")]),s._v(" "),t("th",[s._v("实例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("ABS(x)")]),s._v(" "),t("td",[s._v("返回 x 的绝对值")]),s._v(" "),t("td",[s._v("返回 -1 的绝对值："),t("code",[s._v("SELECT ABS(-1) -- 返回1")])])]),s._v(" "),t("tr",[t("td",[s._v("ACOS(x)")]),s._v(" "),t("td",[s._v("求 x 的反余弦值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT ACOS(0.25);")])])]),s._v(" "),t("tr",[t("td",[s._v("ASIN(x)")]),s._v(" "),t("td",[s._v("求反正弦值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT ASIN(0.25);")])])]),s._v(" "),t("tr",[t("td",[s._v("ATAN(x)")]),s._v(" "),t("td",[s._v("求反正切值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT ATAN(2.5);")])])]),s._v(" "),t("tr",[t("td",[s._v("ATAN2(n, m)")]),s._v(" "),t("td",[s._v("求反正切值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT ATAN2(-0.8, 2);")])])]),s._v(" "),t("tr",[t("td",[s._v("AVG(expression)")]),s._v(" "),t("td",[s._v("返回一个表达式的平均值，expression 是一个字段")]),s._v(" "),t("td",[s._v("返回 Products 表中Price 字段的平均值："),t("code",[s._v("SELECT AVG(Price) AS AveragePrice FROM Products;")])])]),s._v(" "),t("tr",[t("td",[s._v("CEIL(x)")]),s._v(" "),t("td",[s._v("返回大于或等于 x 的最小整数")]),s._v(" "),t("td",[t("code",[s._v("SELECT CEIL(1.5) -- 返回2")])])]),s._v(" "),t("tr",[t("td",[s._v("CEILING(x)")]),s._v(" "),t("td",[s._v("返回大于或等于 x 的最小整数")]),s._v(" "),t("td",[t("code",[s._v("SELECT CEILING(1.5); -- 返回2")])])]),s._v(" "),t("tr",[t("td",[s._v("COS(x)")]),s._v(" "),t("td",[s._v("求余弦值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT COS(2);")])])]),s._v(" "),t("tr",[t("td",[s._v("COT(x)")]),s._v(" "),t("td",[s._v("求余切值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT COT(6);")])])]),s._v(" "),t("tr",[t("td",[s._v("COUNT(expression)")]),s._v(" "),t("td",[s._v("返回查询的记录总数，expression 参数是一个字段或者 * 号")]),s._v(" "),t("td",[s._v("返回 Products 表中 products 字段总共有多少条记录："),t("code",[s._v("SELECT COUNT(ProductID) AS NumberOfProducts FROM Products;")])])]),s._v(" "),t("tr",[t("td",[s._v("DEGREES(x)")]),s._v(" "),t("td",[s._v("将弧度转换为角度")]),s._v(" "),t("td",[t("code",[s._v("SELECT DEGREES(3.1415926535898) -- 180")])])]),s._v(" "),t("tr",[t("td",[s._v("n DIV m")]),s._v(" "),t("td",[s._v("整除，n 为被除数，m 为除数")]),s._v(" "),t("td",[s._v("计算 10 除于 5："),t("code",[s._v("SELECT 10 DIV 5; -- 2")])])]),s._v(" "),t("tr",[t("td",[s._v("EXP(x)")]),s._v(" "),t("td",[s._v("返回 e 的 x 次方")]),s._v(" "),t("td",[s._v("计算 e 的三次方："),t("code",[s._v("SELECT EXP(3) -- 20.085536923188")])])]),s._v(" "),t("tr",[t("td",[s._v("FLOOR(x)")]),s._v(" "),t("td",[s._v("返回小于或等于 x 的最大整数")]),s._v(" "),t("td",[s._v("小于或等于 1.5 的整数："),t("code",[s._v("SELECT FLOOR(1.5) -- 返回1")])])]),s._v(" "),t("tr",[t("td",[s._v("GREATEST(expr1, expr2, expr3, ...)")]),s._v(" "),t("td",[s._v("返回列表中的最大值")]),s._v(" "),t("td",[s._v("返回以下数字列表中的最大值："),t("code",[s._v("SELECT GREATEST(3, 12, 34, 8, 25); -- 34")]),s._v("返回以下字符串列表中的最大值："),t("code",[s._v('SELECT GREATEST("Google", "Runoob", "Apple"); -- Runoob')])])]),s._v(" "),t("tr",[t("td",[s._v("LEAST(expr1, expr2, expr3, ...)")]),s._v(" "),t("td",[s._v("返回列表中的最小值")]),s._v(" "),t("td",[s._v("返回以下数字列表中的最小值："),t("code",[s._v("SELECT LEAST(3, 12, 34, 8, 25); -- 3")]),s._v("返回以下字符串列表中的最小值："),t("code",[s._v('SELECT LEAST("Google", "Runoob", "Apple"); -- Apple')])])]),s._v(" "),t("tr",[t("td",[s._v("LN")]),s._v(" "),t("td",[s._v("返回数字的自然对数，以 e 为底。")]),s._v(" "),t("td",[s._v("返回 2 的自然对数："),t("code",[s._v("SELECT LN(2); -- 0.6931471805599453")])])]),s._v(" "),t("tr",[t("td",[s._v("LOG(x) 或 LOG(base, x)")]),s._v(" "),t("td",[s._v("返回自然对数(以 e 为底的对数)，如果带有 base 参数，则 base 为指定带底数。")]),s._v(" "),t("td",[t("code",[s._v("SELECT LOG(20.085536923188) -- 3 SELECT LOG(2, 4); -- 2")])])]),s._v(" "),t("tr",[t("td",[s._v("LOG10(x)")]),s._v(" "),t("td",[s._v("返回以 10 为底的对数")]),s._v(" "),t("td",[t("code",[s._v("SELECT LOG10(100) -- 2")])])]),s._v(" "),t("tr",[t("td",[s._v("LOG2(x)")]),s._v(" "),t("td",[s._v("返回以 2 为底的对数")]),s._v(" "),t("td",[s._v("返回以 2 为底 6 的对数："),t("code",[s._v("SELECT LOG2(6); -- 2.584962500721156")])])]),s._v(" "),t("tr",[t("td",[s._v("MAX(expression)")]),s._v(" "),t("td",[s._v("返回字段 expression 中的最大值")]),s._v(" "),t("td",[s._v("返回数据表 Products 中字段 Price 的最大值："),t("code",[s._v("SELECT MAX(Price) AS LargestPrice FROM Products;")])])]),s._v(" "),t("tr",[t("td",[s._v("MIN(expression)")]),s._v(" "),t("td",[s._v("返回字段 expression 中的最小值")]),s._v(" "),t("td",[s._v("返回数据表 Products 中字段 Price 的最小值："),t("code",[s._v("SELECT MIN(Price) AS MinPrice FROM Products;")])])]),s._v(" "),t("tr",[t("td",[s._v("MOD(x,y)")]),s._v(" "),t("td",[s._v("返回 x 除以 y 以后的余数")]),s._v(" "),t("td",[s._v("5 除于 2 的余数："),t("code",[s._v("SELECT MOD(5,2) -- 1")])])]),s._v(" "),t("tr",[t("td",[s._v("PI()")]),s._v(" "),t("td",[s._v("返回圆周率(3.141593）")]),s._v(" "),t("td",[t("code",[s._v("SELECT PI() --3.141593")])])]),s._v(" "),t("tr",[t("td",[s._v("POW(x,y)")]),s._v(" "),t("td",[s._v("返回 x 的 y 次方")]),s._v(" "),t("td",[s._v("2 的 3 次方："),t("code",[s._v("SELECT POW(2,3) -- 8")])])]),s._v(" "),t("tr",[t("td",[s._v("POWER(x,y)")]),s._v(" "),t("td",[s._v("返回 x 的 y 次方")]),s._v(" "),t("td",[s._v("2 的 3 次方："),t("code",[s._v("SELECT POWER(2,3) -- 8")])])]),s._v(" "),t("tr",[t("td",[s._v("RADIANS(x)")]),s._v(" "),t("td",[s._v("将角度转换为弧度")]),s._v(" "),t("td",[s._v("180 度转换为弧度："),t("code",[s._v("SELECT RADIANS(180) -- 3.1415926535898")])])]),s._v(" "),t("tr",[t("td",[s._v("RAND()")]),s._v(" "),t("td",[s._v("返回 0 到 1 的随机数")]),s._v(" "),t("td",[t("code",[s._v("SELECT RAND() --0.93099315644334")])])]),s._v(" "),t("tr",[t("td",[s._v("ROUND(x)")]),s._v(" "),t("td",[s._v("返回离 x 最近的整数")]),s._v(" "),t("td",[t("code",[s._v("SELECT ROUND(1.23456) --1")])])]),s._v(" "),t("tr",[t("td",[s._v("SIGN(x)")]),s._v(" "),t("td",[s._v("返回 x 的符号，x 是负数、0、正数分别返回 -1、0 和 1")]),s._v(" "),t("td",[t("code",[s._v("SELECT SIGN(-10) -- (-1)")])])]),s._v(" "),t("tr",[t("td",[s._v("SIN(x)")]),s._v(" "),t("td",[s._v("求正弦值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT SIN(RADIANS(30)) -- 0.5")])])]),s._v(" "),t("tr",[t("td",[s._v("SQRT(x)")]),s._v(" "),t("td",[s._v("返回x的平方根")]),s._v(" "),t("td",[s._v("25 的平方根："),t("code",[s._v("SELECT SQRT(25) -- 5")])])]),s._v(" "),t("tr",[t("td",[s._v("SUM(expression)")]),s._v(" "),t("td",[s._v("返回指定字段的总和")]),s._v(" "),t("td",[s._v("计算 OrderDetails 表中字段 Quantity 的总和："),t("code",[s._v("SELECT SUM(Quantity) AS TotalItemsOrdered FROM OrderDetails;")])])]),s._v(" "),t("tr",[t("td",[s._v("TAN(x)")]),s._v(" "),t("td",[s._v("求正切值(参数是弧度)")]),s._v(" "),t("td",[t("code",[s._v("SELECT TAN(1.75); -- -5.52037992250933")])])]),s._v(" "),t("tr",[t("td",[s._v("TRUNCATE(x,y)")]),s._v(" "),t("td",[s._v("返回数值 x 保留到小数点后 y 位的值（与 ROUND 最大的区别是不会进行四舍五入）")]),s._v(" "),t("td",[t("code",[s._v("SELECT TRUNCATE(1.23456,3) -- 1.234")])])])])]),s._v(" "),t("p",[s._v("ROUND 函数四舍五入列、表达式或者 n 位小数的值。如果第二个参数是 0 或者缺少，值被四舍五入为整数。如果第二个参数是 2值被四舍五入为两位小数。如果第二个参数是–2，值被四舍五入到小数点左边两位。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ROUND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45.923")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ROUND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45.923")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ROUND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45.923")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("TRUNCATE函数的作用类似于 ROUND 函数。如果第二个参数是 0 或者缺少，值被截断为整数。如果第二个参数是 2，值被截断为两位小数。如果第二个参数是–2，值被截断到小数点左边两位。与 ROUND 最大的区别是不会进行四舍五入。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRUNCATE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45.923")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("MOD 函数找出m 除以n的余数。所有job_id是SA_REP的雇员的名字，薪水以及薪水被5000除后的余数。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("MOD")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" job_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SA_REP'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"d-日期函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d-日期函数"}},[s._v("#")]),s._v(" d）日期函数")]),s._v(" "),t("p",[s._v("在MySQL中允许直接使用字符串表示日期，但是要求字符串的日期格式必须为：‘YYYY-MM-DD HH:MI:SS’ 或者‘YYYY/MM/DD HH:MI:SS’;")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数名")]),s._v(" "),t("th",[s._v("描述")]),s._v(" "),t("th",[s._v("实例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("CURDATE()")]),s._v(" "),t("td",[s._v("返回当前日期")]),s._v(" "),t("td",[t("code",[s._v("SELECT CURDATE(); -> 2018-09-19")])])]),s._v(" "),t("tr",[t("td",[s._v("CURTIME()")]),s._v(" "),t("td",[s._v("返回当前时间")]),s._v(" "),t("td",[t("code",[s._v("SELECT CURTIME(); -> 19:59:02")])])]),s._v(" "),t("tr",[t("td",[s._v("CURRENT_DATE()")]),s._v(" "),t("td",[s._v("返回当前日期")]),s._v(" "),t("td",[t("code",[s._v("SELECT CURRENT_DATE(); -> 2018-09-19")])])]),s._v(" "),t("tr",[t("td",[s._v("CURRENT_TIME()")]),s._v(" "),t("td",[s._v("返回当前时间")]),s._v(" "),t("td",[t("code",[s._v("SELECT CURRENT_TIME(); -> 19:59:02")])])]),s._v(" "),t("tr",[t("td",[s._v("DATE()")]),s._v(" "),t("td",[s._v("从日期或日期时间表达式中提取日期值")]),s._v(" "),t("td",[t("code",[s._v('SELECT DATE("2017-06-15"); -> 2017-06-15')])])]),s._v(" "),t("tr",[t("td",[s._v("DATEDIFF(d1,d2)")]),s._v(" "),t("td",[s._v("计算日期 d1->d2 之间相隔的天数")]),s._v(" "),t("td",[t("code",[s._v("SELECT DATEDIFF('2001-01-01','2001-02-02') -> -32")])])]),s._v(" "),t("tr",[t("td",[s._v("DAY(d)")]),s._v(" "),t("td",[s._v("返回日期值 d 的日期部分")]),s._v(" "),t("td",[t("code",[s._v('SELECT DAY("2017-06-15"); -> 15')])])]),s._v(" "),t("tr",[t("td",[s._v("DAYNAME(d)")]),s._v(" "),t("td",[s._v("返回日期 d 是星期几，如 Monday,Tuesday")]),s._v(" "),t("td",[t("code",[s._v("SELECT DAYNAME('2011-11-11 11:11:11') ->Friday")])])]),s._v(" "),t("tr",[t("td",[s._v("DAYOFMONTH(d)")]),s._v(" "),t("td",[s._v("计算日期 d 是本月的第几天")]),s._v(" "),t("td",[t("code",[s._v("SELECT DAYOFMONTH('2011-11-11 11:11:11') ->11")])])]),s._v(" "),t("tr",[t("td",[s._v("DAYOFWEEK(d)")]),s._v(" "),t("td",[s._v("日期 d 今天是星期几，1 星期日，2 星期一，以此类推")]),s._v(" "),t("td",[t("code",[s._v("SELECT DAYOFWEEK('2011-11-11 11:11:11') ->6")])])]),s._v(" "),t("tr",[t("td",[s._v("DAYOFYEAR(d)")]),s._v(" "),t("td",[s._v("计算日期 d 是本年的第几天")]),s._v(" "),t("td",[t("code",[s._v("SELECT DAYOFYEAR('2011-11-11 11:11:11') ->315")])])]),s._v(" "),t("tr",[t("td",[s._v("HOUR(t)")]),s._v(" "),t("td",[s._v("返回 t 中的小时值")]),s._v(" "),t("td",[t("code",[s._v("SELECT HOUR('1:2:3') -> 1")])])]),s._v(" "),t("tr",[t("td",[s._v("LAST_DAY(d)")]),s._v(" "),t("td",[s._v("返回给给定日期的那一月份的最后一天")]),s._v(" "),t("td",[t("code",[s._v('SELECT LAST_DAY("2017-06-20"); -> 2017-06-30')])])]),s._v(" "),t("tr",[t("td",[s._v("MONTHNAME(d)")]),s._v(" "),t("td",[s._v("返回日期当中的月份名称，如 November")]),s._v(" "),t("td",[t("code",[s._v("SELECT MONTHNAME('2011-11-11 11:11:11') -> November")])])]),s._v(" "),t("tr",[t("td",[s._v("MONTH(d)")]),s._v(" "),t("td",[s._v("返回日期d中的月份值，1 到 12")]),s._v(" "),t("td",[t("code",[s._v("SELECT MONTH('2011-11-11 11:11:11') ->11")])])]),s._v(" "),t("tr",[t("td",[s._v("NOW()")]),s._v(" "),t("td",[s._v("返回当前日期和时间")]),s._v(" "),t("td",[t("code",[s._v("SELECT NOW() -> 2018-09-19 20:57:43")])])]),s._v(" "),t("tr",[t("td",[s._v("SECOND(t)")]),s._v(" "),t("td",[s._v("返回 t 中的秒钟值")]),s._v(" "),t("td",[t("code",[s._v("SELECT SECOND('1:2:3') -> 3")])])]),s._v(" "),t("tr",[t("td",[s._v("SYSDATE()")]),s._v(" "),t("td",[s._v("返回当前日期和时间")]),s._v(" "),t("td",[t("code",[s._v("SELECT SYSDATE() -> 2018-09-19 20:57:43")])])]),s._v(" "),t("tr",[t("td",[s._v("TIMEDIFF(time1, time2)")]),s._v(" "),t("td",[s._v("计算时间差值")]),s._v(" "),t("td",[t("code",[s._v('SELECT TIMEDIFF("13:10:11", "13:10:10"); -> 00:00:01')])])]),s._v(" "),t("tr",[t("td",[s._v("TO_DAYS(d)")]),s._v(" "),t("td",[s._v("计算日期 d 距离 0000 年 1 月 1 日的天数")]),s._v(" "),t("td",[t("code",[s._v("SELECT TO_DAYS('0001-01-01 01:01:01') -> 366")])])]),s._v(" "),t("tr",[t("td",[s._v("WEEK(d)")]),s._v(" "),t("td",[s._v("计算日期 d 是本年的第几个星期，范围是 0 到 53")]),s._v(" "),t("td",[t("code",[s._v("SELECT WEEK('2011-11-11 11:11:11') -> 45")])])]),s._v(" "),t("tr",[t("td",[s._v("WEEKDAY(d)")]),s._v(" "),t("td",[s._v("日期 d 是星期几，0 表示星期一，1 表示星期二")]),s._v(" "),t("td",[t("code",[s._v('SELECT WEEKDAY("2017-06-15"); -> 3')])])]),s._v(" "),t("tr",[t("td",[s._v("WEEKOFYEAR(d)")]),s._v(" "),t("td",[s._v("计算日期 d 是本年的第几个星期，范围是 0 到 53")]),s._v(" "),t("td",[t("code",[s._v("SELECT WEEKOFYEAR('2011-11-11 11:11:11') -> 45")])])]),s._v(" "),t("tr",[t("td",[s._v("YEAR(d)")]),s._v(" "),t("td",[s._v("返回年份")]),s._v(" "),t("td",[t("code",[s._v('SELECT YEAR("2017-06-15"); -> 2017')])])])])]),s._v(" "),t("p",[s._v("向 employees 表中添加一条数据，雇员ID：300，名字：kevin ，email：mailto:kevin@qq.com，入职时间：2049-5-1 8:30:30，工作部门：‘IT_PROG’。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EMPLOYEE_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("HIRE_DATE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("JOB_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kevin'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kevin@qq.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2049-5-1 8:30:30'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IT_PROG'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"e-转换函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#e-转换函数"}},[s._v("#")]),s._v(" e）转换函数")]),s._v(" "),t("p",[t("strong",[s._v("隐式数据类型转换")])]),s._v(" "),t("p",[s._v("隐式数据类型转换是指MySQL服务器能够自动地进行类型转换。如：可以将标准格式的字串日期自动转换为日期类型。")]),s._v(" "),t("p",[s._v("MySQL字符串日期格式为：‘YYYY-MM-DD HH:MI:SS’ 或 ‘YYYY/MM/DD HH:MI:SS’;")]),s._v(" "),t("p",[t("strong",[s._v("显示数据类型转换")])]),s._v(" "),t("p",[s._v("显示数据类型转换是指需要依赖转换函数来完成相关类型的转换。")]),s._v(" "),t("p",[s._v("如：")]),s._v(" "),t("ul",[t("li",[s._v("DATE_FORMAT(date,format) 将日期转换成字符串;")]),s._v(" "),t("li",[s._v("STR_TO_DATE(str,format) 将字符串转换成日期;")])]),s._v(" "),t("p",[s._v("向 employees 表中添加一条数据，雇员ID：400，名字：oldlu ，email：mailto:oldlu@qq.com ，入职时间：2049 年 5 月 5 日，工作部门：‘IT_PROG’。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EMPLOYEE_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("HIRE_DATE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("JOB_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("400")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oldlu'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oldlu@qq.com '")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" STR_TO_DATE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2049 年 5 月 5 日'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y 年%m 月%d 日'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IT_PROG'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查询 employees 表中雇员名字为 King 的雇员的入职日期，要求显示格式为 yyyy 年 MM 月 dd 日。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" DATE_FORMAT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hire_date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y 年%m 月%d 日'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'King'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"f-通用函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#f-通用函数"}},[s._v("#")]),s._v(" f）通用函数")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数名")]),s._v(" "),t("th",[s._v("描述")]),s._v(" "),t("th",[s._v("实例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("IF(expr,v1,v2)")]),s._v(" "),t("td",[s._v("如果表达式 expr 成立，返回结果 v1；否则，返回结果 v2。")]),s._v(" "),t("td",[t("code",[s._v("SELECT IF(1 > 0,'正确','错误') ->正确")])])]),s._v(" "),t("tr",[t("td",[s._v("IFNULL(v1,v2)")]),s._v(" "),t("td",[s._v("如果 v1 的值不为 NULL，则返回 v1，否则返回 v2。")]),s._v(" "),t("td",[t("code",[s._v("SELECT IFNULL(null,'Hello Word') ->Hello Word")])])]),s._v(" "),t("tr",[t("td",[s._v("ISNULL(expression)")]),s._v(" "),t("td",[s._v("判断表达式是否为 NULL")]),s._v(" "),t("td",[t("code",[s._v("SELECT ISNULL(NULL); ->1")])])]),s._v(" "),t("tr",[t("td",[s._v("NULLIF(expr1, expr2)")]),s._v(" "),t("td",[s._v("比较两个参数是否相同，如果参数 expr1 与 expr2 相等 返回 NULL，否则返回 expr1")]),s._v(" "),t("td",[t("code",[s._v("SELECT NULLIF(25, 25); ->")])])]),s._v(" "),t("tr",[t("td",[s._v("COALESCE(expr1, expr2, ...., expr_n)")]),s._v(" "),t("td",[s._v("返回参数中的第一个非空表达式（从左向右）")]),s._v(" "),t("td",[t("code",[s._v("SELECT COALESCE(NULL, NULL, NULL, 'bjsxt.com', NULL, 'google.com'); -> bjsxt.com")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("CASE expression WHEN condition1 THEN result1 WHEN condition2 THEN result2 ... WHEN conditionN THEN resultN ELSE result END")])]),s._v(" "),t("td",[s._v("CASE 表示函数开始，END 表示函数结束。如果 condition1 成立，则返回 result1, 如果 condition2 成立，则返回 result2，当全部不成立则返回 result，而当有一个成立之后，后面的就不执行了。")]),s._v(" "),t("td",[t("code",[s._v("SELECT CASE 'oldlu' WHEN 'oldlu' THEN 'OLDLU' WHEN 'admin' THEN 'ADMIN' ELSE 'kevin' END;")])])])])]),s._v(" "),t("p",[s._v("查询部门编号是50或者80的员工信息，包含他们的名字、薪水、佣金。在income列中，如果有佣金则显示‘SAL+COMM’，无佣金则显示'SAL'。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ISNULL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SAL'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SAL+COMM'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" income \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("计算雇员的年报酬，你需要用 12 乘以月薪，再加上它的佣金 (等于年薪乘以佣金百分比)。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" IFNULL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("IFNULL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" AN_SAL \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("查询员工表，显示他们的名字、名字的长度该列名为expr1，姓氏、姓氏的长度该列名为expr2。在result列中，如果名字与姓氏的长度相同则显示空，如果不相同则显示名字长度。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" first_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LENGTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"expr1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LENGTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"expr2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NULLIF")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LENGTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LENGTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" result\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("查询员工表，显示他们的名字，如果 COMMISSION_PCT 值是非空，显示它。如果COMMISSION_PCT 值是空，则显示 SALARY 。如果 COMMISSION_PCT 和SALARY 值都是空，那么显示 10。在结果中对佣金列升序排序。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COALESCE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" comm \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("查询员工表，如果 JOB_ID 是 IT_PROG，薪水增加 10%；如果 JOB_ID 是 ST_CLERK，薪水增加 15%；如果 JOB_ID 是 SA_REP，薪水增加 20%。对于所有其他的工作角色，不增加薪水。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" job_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v(" job_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IT_PROG'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.10")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary \n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ST_CLERK'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.15")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary \n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SA_REP'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.20")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("salary \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REVISED_SALARY"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"g-实操"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g-实操"}},[s._v("#")]),s._v(" g）实操")]),s._v(" "),t("p",[s._v("显示受雇日期在 1998 年 2 月 20 日 和 2005 年 5 月 1 日 之间的雇员的名字、岗位和受雇日期。按受雇日期顺序排序查询结果。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("JOB_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("HIRE_DATE\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" HIRE_DATE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1998-2-20'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2005-5-1'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" HIRE_DATE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("显示每一个在 2002 年受雇的雇员的名字和受雇日期。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("HIRE_DATE\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" HIRE_DATE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2002%'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("对每一个雇员，显示 employee number、last_name、salary 和 salary 增加 15%，并且表示成整数，列标签显示为 New Salary。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nEMPLOYEE_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("LAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ROUND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SALARY "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.15")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("写一个查询，显示名字的长度，对所有名字开始字母是 J、A 或 M 的雇员。用雇员的 lastname排序结果。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nLENGTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" LAST_NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'J%'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v("\nLAST_NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A%'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v("\nLAST_NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'M%'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" LAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("创建一个查询显示所有雇员的 last name 和 salary。将薪水格式化为 15 个字符长度，用 $左填充 。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("LPAD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("创建一个查询显示雇员的 last names 和 commission (佣金) 比率。如果雇员没有佣金，显示 “No Commission”，列标签 COMM。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\nLAST_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("IFNULL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("COMMISSION_PCT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'No Commission'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" COMM\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("写一个查询，按照下面的数据显示所有雇员的基于 JOB_ID 列值的级别。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("工作")])]),s._v(" "),t("th",[t("strong",[s._v("级别")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("AD_PRES")]),s._v(" "),t("td",[s._v("A")])]),s._v(" "),t("tr",[t("td",[s._v("ST_MAN")]),s._v(" "),t("td",[s._v("B")])]),s._v(" "),t("tr",[t("td",[s._v("IT_PROG")]),s._v(" "),t("td",[s._v("C")])]),s._v(" "),t("tr",[t("td",[s._v("SA_REP")]),s._v(" "),t("td",[s._v("D")])]),s._v(" "),t("tr",[t("td",[s._v("ST_CLERK")]),s._v(" "),t("td",[s._v("E")])]),s._v(" "),t("tr",[t("td",[s._v("不在上面的")]),s._v(" "),t("td",[s._v("0")])])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" JOB_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v(" JOB_ID "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'AD_PRES'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ST_MAN'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B'")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IT_PROG'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SA_REP'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'D'")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ST_CLERK'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'E'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"_9-多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-多表查询"}},[s._v("#")]),s._v(" 9，多表查询")]),s._v(" "),t("h4",{attrs:{id:"a-多表查询介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-多表查询介绍"}},[s._v("#")]),s._v(" a）多表查询介绍")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5514),alt:"1718065727561"}})]),s._v(" "),t("p",[t("strong",[s._v("笛卡尔乘积：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5515),alt:"1718065777530"}})]),s._v(" "),t("p",[s._v("笛卡尔乘积 ：")]),s._v(" "),t("p",[s._v("当一个连接条件无效或被遗漏时，其结果是一个笛卡尔乘积 ("),t("em",[s._v("Cartesian product")]),s._v(")，其中所有行的组合都被显示。第一个表中的所有行连接到第二个表中的所有行。一个笛卡尔乘积会产生大量的行，其结果没有什么用。你应该在 WHERE 子句中始终包含一个有效的连接条件，除非你有特殊的需求，需要从所有表中组合所有的行。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5516),alt:"1718065866775"}})]),s._v(" "),t("h4",{attrs:{id:"b-等值连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-等值连接"}},[s._v("#")]),s._v(" b）等值连接")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5517),alt:"1718066049985"}})]),s._v(" "),t("p",[t("strong",[s._v("等值连接")])]),s._v(" "),t("p",[s._v("为了确定一个雇员的部门名，需要比较 EMPLOYEES 表中的 DEPARTMENT_ID 列与DEPARTMENTS 表中的 DEPARTMENT_ID 列的值。在 EMPLOYEES 和DEPARTMENTS 表之间的关系是一个相等 ("),t("em",[s._v("equijoin")]),s._v(") 关系，即，两 个 表 中DEPARTMENT_ID 列的值必须相等。")]),s._v(" "),t("p",[s._v("**等值连接特点：**等值连接也被称为简单连接 ("),t("em",[s._v("simple joins")]),s._v(") 或内连接 ("),t("em",[s._v("inner joins")]),s._v(")。")]),s._v(" "),t("ol",[t("li",[s._v("多表等值连接的结果为多表的交集部分；")]),s._v(" "),t("li",[s._v("n表连接，至少需要n-1个连接条件；")]),s._v(" "),t("li",[s._v("多表不分主次，没有顺序要求；")]),s._v(" "),t("li",[s._v("一般为表起别名，提高阅读性和性能；")]),s._v(" "),t("li",[s._v("可以搭配排序、分组、筛选….等子句使用；")])]),s._v(" "),t("p",[t("strong",[s._v("等值连接的使用：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5518),alt:"1718066268831"}})]),s._v(" "),t("p",[s._v("SELECT 子句指定要返回的列名：")]),s._v(" "),t("ul",[t("li",[s._v("employee last name、employee number 和 department number，这些是EMPLOYEES 表中的列")]),s._v(" "),t("li",[s._v("department number、department name 和 location ID，这些是 DEPARTMENTS 表中的列")])]),s._v(" "),t("p",[s._v("FROM 子句指定数据库必须访问的两个表：")]),s._v(" "),t("ul",[t("li",[s._v("EMPLOYEES 表")]),s._v(" "),t("li",[s._v("DEPARTMENTS 表")])]),s._v(" "),t("p",[s._v("WHERE 子句指定表怎样被连接：")]),s._v(" "),t("ul",[t("li",[s._v("EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID，因为 DEPARTMENT_ID 列是两个表的同名列，它必须用表名做前缀以避免混淆。")])]),s._v(" "),t("p",[s._v("增加搜索条件：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(5519),alt:"1718066863027"}})]),s._v(" "),t("p",[t("strong",[s._v("添加查询条件:")])]),s._v(" "),t("p",[s._v("除连接之外，可能还要求用 WHERE 子句在连接中限制一个或多个表中的行。")]),s._v(" "),t("p",[t("strong",[s._v("限制不能缺的列：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5520),alt:"1718066908732"}})]),s._v(" "),t("p",[t("strong",[s._v("限制不明确的列名：")])]),s._v(" "),t("ul",[t("li",[s._v("需要在 WHERE 子句中用表的名字限制列的名字以避免含糊不清。没有表前缀，DEPARTMENT_ID 列可能来自 DEPARTMENTS 表，也可能来自 EMPLOYEES 表，这种情况下需要添加表前缀来执行查询。")]),s._v(" "),t("li",[s._v("如果列名在两个表之间不相同，就不需要限定列。但是，使用表前缀可以改善性能，因为MySQL服务器可以根据表前缀找到对应的列。")]),s._v(" "),t("li",[s._v("必须限定不明确的列名也适用于在其它子句中可能引起混淆的那些列，例如 SELECT子句或 ORDER BY 子句。")])]),s._v(" "),t("p",[t("strong",[s._v("使用表别名：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5521),alt:"1718066993053"}})]),s._v(" "),t("p",[t("strong",[s._v("表别名定义原则：")])]),s._v(" "),t("ul",[t("li",[s._v("表别名不易过长，短一些更好。")]),s._v(" "),t("li",[s._v("表别名应该是有意义的。")]),s._v(" "),t("li",[s._v("表别名只对当前的 SELECT 语句有效。")])]),s._v(" "),t("p",[t("strong",[s._v("多表连接：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5522),alt:"1718067146446"}})]),s._v(" "),t("p",[s._v("查询雇员 King 所在的部门名称。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("departments d  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dept_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("last_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'King'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("显示每个雇员的 last name、departmentname 和 city。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("city \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" departments d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" locations l \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);