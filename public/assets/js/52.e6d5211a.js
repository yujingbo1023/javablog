(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{3890:function(t,s,i){t.exports=i.p+"assets/img/1702881499312.b1a44edd.png"},3891:function(t,s,i){t.exports=i.p+"assets/img/1702881546475.f3abf4b7.png"},3892:function(t,s,i){t.exports=i.p+"assets/img/1702881613580.2dc2ec72.png"},3893:function(t,s,i){t.exports=i.p+"assets/img/1702881788294.7c05a3db.png"},3894:function(t,s,i){t.exports=i.p+"assets/img/1702881948488.5334b537.png"},4042:function(t,s,i){"use strict";i.r(s);var r=i(2),_=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一-初识spring框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-初识spring框架"}},[t._v("#")]),t._v(" 一，初识Spring框架")]),t._v(" "),s("h3",{attrs:{id:"_1-为什么要学框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么要学框架"}},[t._v("#")]),t._v(" 1，为什么要学框架")]),t._v(" "),s("p",[t._v("Spring技术是JavaEE开发必备技能，企业开发技术选型命中率>90%。有的优势")]),t._v(" "),s("ul",[s("li",[t._v("简化开发，降低企业级开发的复杂性\n"),s("ul",[s("li",[t._v("IOC  反转控制")]),t._v(" "),s("li",[t._v("AOP 面向切面编程")])])]),t._v(" "),s("li",[t._v("框架整合，高效整合其他技术，提高企业级应用开发与运行效率\n"),s("ul",[s("li",[t._v("MyBatis")]),t._v(" "),s("li",[t._v("MyBatis-plus")]),t._v(" "),s("li",[t._v("Struts")]),t._v(" "),s("li",[t._v("Struts2")]),t._v(" "),s("li",[t._v("Hibernate")]),t._v(" "),s("li",[t._v("....")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-认识spring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-认识spring"}},[t._v("#")]),t._v(" 2，认识Spring")]),t._v(" "),s("p",[s("img",{attrs:{src:i(3890),alt:"1702881499312"}})]),t._v(" "),s("ul",[s("li",[t._v("官网：https://spring.io")]),t._v(" "),s("li",[t._v("Spring发展到今天已经形成了一种开发的生态圈，Spring提供了若干个项目，每个项目用于完成特定的功能。")])]),t._v(" "),s("p",[s("strong",[t._v("Spring发展史")])]),t._v(" "),s("p",[s("img",{attrs:{src:i(3891),alt:"1702881546475"}})]),t._v(" "),s("p",[s("strong",[t._v("系统架构图")])]),t._v(" "),s("p",[t._v("Spring Framework是Spring生态圈中最基础的项目，是其他项目的根基")]),t._v(" "),s("p",[s("img",{attrs:{src:i(3892),alt:"1702881613580"}})]),t._v(" "),s("p",[t._v("目前我们的代码存在什么问题以及怎么解决这些问题？")]),t._v(" "),s("ul",[s("li",[t._v("代码耦合度偏高")])]),t._v(" "),s("p",[s("img",{attrs:{src:i(3893),alt:"1702881788294"}})]),t._v(" "),s("p",[t._v("解决方案：使用对象时，在程序中不要主动使用new产生对象，转换为由外部提供对象")]),t._v(" "),s("p",[s("strong",[t._v("核心概念：")])]),t._v(" "),s("ul",[s("li",[t._v("IOC（Inversion of Control）控制反转。使用对象时，由主动new产生对象转换为由外部提供对象，此过程中对象创建控制权由程序转移到外部，此思想称为控制反转。通俗的讲就是“将new对象的权利交给Spring，我们从Spring中获取对象使用即可”")]),t._v(" "),s("li",[t._v("Spring技术对IOC思想进行了实现。Spring提供了一个容器，称为IOC容器，用来充当IOC思想中的“外部”。IOC容器负责对象的创建、初始化等一系列工作，被创建或被管理的对象在IoC容器中统称为Bean")]),t._v(" "),s("li",[t._v("DI（Dependency Injection）依赖注入。在容器中建立bean与bean之间的依赖关系的整个过程，称为依赖注入。")])]),t._v(" "),s("p",[s("img",{attrs:{src:i(3894),alt:"1702881948488"}})]),t._v(" "),s("p",[t._v("这样做的目录是充分解耦，使用IOC容器管理bean，在IOC容器内将有依赖关系的bean进行关系绑定（DI）。最终使用对象时不仅可以直接从IoC容器中获取，并且获取到的bean已经绑定了所有的依赖关系。")]),t._v(" "),s("p",[s("strong",[t._v("Spring Framework课程学习路线")])]),t._v(" "),s("ol",[s("li",[t._v("核心容器，IOC/DI，容器的基本操作")]),t._v(" "),s("li",[t._v("AOP，AOP基础操作，AOP实用开发")]),t._v(" "),s("li",[t._v("事务")]),t._v(" "),s("li",[t._v("整合MyBatis")])]),t._v(" "),s("h2",{attrs:{id:"二-ioc和di入门案例【重点】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-ioc和di入门案例【重点】"}},[t._v("#")]),t._v(" 二，IOC和DI入门案例【重点】")]),t._v(" "),s("h2",{attrs:{id:"三-bean的基础配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-bean的基础配置"}},[t._v("#")]),t._v(" 三，Bean的基础配置")])])}),[],!1,null,null,null);s.default=_.exports}}]);